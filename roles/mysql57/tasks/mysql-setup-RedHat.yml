- name: Create group MySQL
  group:
    name: mysql
    state: present

- name: ADD MySQL user
  user:
    name: mysql
    shell: /bin/false
    group: mysql
    append: yes

- name: Create MySQL Engine directory
  file:
    path: /mysql
    state: directory
    owner: mysql
    group: mysql

- name: Create MySQL directory data and log
  file:
    path: "/data/{{ item }}"
    owner: mysql
    group: mysql
    mode: 0755
    recurse: yes
    state: directory
  with_items:
    - "mysqldata"
    - "mysqllog/error"
    - "mysqllog/binary"
    - "mysqllog/slow"
    - "mysqllog/redo"
    - "mysqllog/undo"

- name: List /data
  shell: "ls -lht /data"
  register: result
- name: show /data
  debug:
    msg: "{{ result.stdout_lines }}"

- name: Create MySQL error log file
  file:
    path: "/data/{{ item }}/mysql.err"
    owner: mysql
    group: mysql
    recurse: yes
  with_items
- name: Download and Extract MySQL Generic binary version
  unarchive:
    src: "{{ download_url }}"
    dest: "/mysql"
    extra_opts: [--strip-components=1]
    remote_src: yes

- name: Check MySQL DataDirector is empty or not
  shell: |
    if [ "$(ls -A /data/mysqldata)" ]; then
        echo "Directory Not Empty ===> Stop install"
    else
        echo "Directory Empty ===> install"
    fi
  register: result
  failed_when: "'Directory Not Empty ===> Stop install' in result.stdout_lines"

- name: Install MySQL
  command: "./bin/mysqld --basedir=/mysql --datadir=/data/mysqldata --initialize --user=mysql"
  register: result
  args:
    chdir: "/mysql"
- debug:
    msg: "{{ result.stdout_lines }}"

- name: get root password
  shell: "grep 'A temporary password is generated for root@localhost' /data/mysqllog/error/mysql.err | awk -F ' ' '{print $(NF)}'"
  register: result
- debug:
    msg: "{{ result.stdout_lines }}"
